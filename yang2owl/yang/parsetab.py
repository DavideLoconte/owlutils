
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "root_stmtCONCAT KEYWORD STRING\n        lbracket : '{'\n    \n        rbracket : '}'\n    \n        stmt : key value lbracket stmts\n    \n        root_stmt : key value lbracket stmts rbracket\n    \n        empty :\n    \n        key : KEYWORD\n            | string\n    \n        value : KEYWORD\n              | string\n              | empty\n    \n        string : STRING CONCAT string\n    \n        string : STRING string\n    \n        string : STRING\n    \n        stmt : key value lbracket stmts rbracket\n             | key value lbracket stmts rbracket ';'\n    \n        stmt : key value lbracket empty rbracket\n             | key value lbracket empty rbracket ';'\n    \n        stmt : key value ';'\n    \n        stmts : stmt stmts\n    \n        stmts : stmt\n    "
    
_lr_action_items = {'KEYWORD':([0,2,3,4,5,11,12,13,14,15,17,20,21,22,23,24,26,27,28,29,],[3,7,-6,-7,-13,-12,3,-1,-11,7,3,-2,-19,3,-18,-3,-14,-16,-15,-17,]),'STRING':([0,2,3,4,5,10,11,12,13,14,15,17,20,21,22,23,24,26,27,28,29,],[5,5,-6,-7,5,5,-12,5,-1,-11,5,5,-2,-19,5,-18,-3,-14,-16,-15,-17,]),'$end':([1,19,20,],[0,-4,-2,]),'{':([2,3,4,5,6,7,8,9,11,14,15,18,],[-5,-6,-7,-13,13,-8,-9,-10,-12,-11,-5,13,]),';':([3,4,5,7,8,9,11,14,15,18,20,26,27,],[-6,-7,-13,-8,-9,-10,-12,-11,-5,23,-2,28,29,]),'CONCAT':([5,],[10,]),'}':([13,16,17,20,21,22,23,24,25,26,27,28,29,],[-1,20,-20,-2,-19,-5,-18,20,20,-14,-16,-15,-17,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'root_stmt':([0,],[1,]),'key':([0,12,17,22,],[2,15,15,15,]),'string':([0,2,5,10,12,15,17,22,],[4,8,11,14,4,8,4,4,]),'value':([2,15,],[6,18,]),'empty':([2,15,22,],[9,9,25,]),'lbracket':([6,18,],[12,22,]),'stmts':([12,17,22,],[16,21,24,]),'stmt':([12,17,22,],[17,17,17,]),'rbracket':([16,24,25,],[19,26,27,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> root_stmt","S'",1,None,None,None),
  ('lbracket -> {','lbracket',1,'p_lbracket','parser.py',14),
  ('rbracket -> }','rbracket',1,'p_rbracket','parser.py',23),
  ('stmt -> key value lbracket stmts','stmt',4,'p_unclosed_stmt','parser.py',32),
  ('root_stmt -> key value lbracket stmts rbracket','root_stmt',5,'p_root_stmt','parser.py',41),
  ('empty -> <empty>','empty',0,'p_empty_value','parser.py',55),
  ('key -> KEYWORD','key',1,'p_keyword','parser.py',62),
  ('key -> string','key',1,'p_keyword','parser.py',63),
  ('value -> KEYWORD','value',1,'p_identifier','parser.py',70),
  ('value -> string','value',1,'p_identifier','parser.py',71),
  ('value -> empty','value',1,'p_identifier','parser.py',72),
  ('string -> STRING CONCAT string','string',3,'p_string_cat','parser.py',79),
  ('string -> STRING string','string',2,'p_string_cat_direct','parser.py',86),
  ('string -> STRING','string',1,'p_string','parser.py',93),
  ('stmt -> key value lbracket stmts rbracket','stmt',5,'p_parent_stmt','parser.py',100),
  ('stmt -> key value lbracket stmts rbracket ;','stmt',6,'p_parent_stmt','parser.py',101),
  ('stmt -> key value lbracket empty rbracket','stmt',5,'p_parent_stmt_no_children','parser.py',115),
  ('stmt -> key value lbracket empty rbracket ;','stmt',6,'p_parent_stmt_no_children','parser.py',116),
  ('stmt -> key value ;','stmt',3,'p_leaf_stmt','parser.py',130),
  ('stmts -> stmt stmts','stmts',2,'p_stmts','parser.py',142),
  ('stmts -> stmt','stmts',1,'p_stmts_end','parser.py',150),
]
